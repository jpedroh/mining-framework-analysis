  package   org . hdiv . urlProcessor ;   import    javax . servlet . http . HttpServletRequest ;  import     org . apache . commons . logging . Log ;  import     org . apache . commons . logging . LogFactory ;  import    org . hdiv . dataComposer . IDataComposer ;  import    org . hdiv . util . Constants ;  import    org . hdiv . util . HDIVUtil ;  import    org . hdiv . util . Method ;   public class FormUrlProcessor  extends AbstractUrlProcessor  {   public static final String  FORM_STATE_ID = "hdivFormStateId" ;   private static final Log  log =  LogFactory . getLog  (  FormUrlProcessor . class ) ;   public String processUrl  (   final HttpServletRequest request ,   final String url )  {  return  processUrl  ( request , url ,  Method . POST ) ; }    @ Deprecated public final String processUrl  (   final HttpServletRequest request ,   final String url ,   final String method )  {  return  processUrl  ( request , url ,  Method . secureValueOf  ( method ) ) ; }   public String processUrl  (   final HttpServletRequest request ,  String url ,  Method method )  {  if  (  method == null )  {   method =  Method . POST ; }  IDataComposer  dataComposer =  HDIVUtil . getDataComposer  ( request ) ;  if  (  dataComposer == null )  {  if  (  log . isDebugEnabled  ( ) )  {   log . debug  ( "IDataComposer not initialized on request. Request doesn't pass through ValidatorFilter, review it's mapping" ) ; }  return url ; }  String  hdivParameter =  HDIVUtil . getHdivStateParameterName  ( request ) ;  UrlData  urlData =  createUrlData  ( url , method , hdivParameter , request ) ;  if  (  isHdivStateNecessary  ( urlData ) )  {  String  stateId =  dataComposer . beginRequest  ( method ,  urlData . getUrlWithoutContextPath  ( ) ) ;   request . setAttribute  ( FORM_STATE_ID , stateId ) ;  String  processedParams =  dataComposer . composeParams  (  urlData . getUrlParams  ( ) , method ,  Constants . ENCODING_UTF_8 ) ;   urlData . setUrlParams  ( processedParams ) ;   url =  getProcessedUrl  ( urlData ) ; }  return url ; } }