  package     org . hdiv . web . servlet . support ;   import   java . util . ArrayList ;  import   java . util . HashMap ;  import   java . util . List ;  import   java . util . Map ;  import    javax . servlet . http . HttpServletRequest ;  import    org . hdiv . dataComposer . IDataComposer ;  import    org . hdiv . urlProcessor . FormUrlProcessor ;  import    org . hdiv . urlProcessor . LinkUrlProcessor ;  import    org . hdiv . util . HDIVUtil ;  import    org . hdiv . util . Method ;  import      org . springframework . web . servlet . support . RequestDataValueProcessor ;   public class HdivRequestDataValueProcessor  implements  RequestDataValueProcessor  {   protected LinkUrlProcessor  linkUrlProcessor ;   protected FormUrlProcessor  formUrlProcessor ;   protected RequestDataValueProcessor  innerRequestDataValueProcessor ;   protected  List  < String >  noEditableTypes =  new  ArrayList  < String >  ( ) ;   public HdivRequestDataValueProcessor  ( )  {   initNoEditableTypes  ( ) ; }   protected void initNoEditableTypes  ( )  {   noEditableTypes . add  ( "checkbox" ) ;   noEditableTypes . add  ( "hidden" ) ;   noEditableTypes . add  ( "option" ) ;   noEditableTypes . add  ( "radio" ) ;   noEditableTypes . add  ( "select" ) ;   noEditableTypes . add  ( "submit" ) ; }   public String processAction  (   final HttpServletRequest request ,   final String action )  {  return  this . processAction  ( request , action , "POST" ) ; }   public String processAction  (   final HttpServletRequest request ,  String action ,   final String method )  {  if  (  innerRequestDataValueProcessor != null )  {  String  processedAction =  innerRequestDataValueProcessor . processAction  ( request , action , method ) ;  if  (  processedAction != action )  {   action = processedAction ; } }  String  result =  formUrlProcessor . processUrl  ( request , action ,  Method . secureValueOf  ( method ) ) ;  return result ; }   public String processFormFieldValue  (   final HttpServletRequest request ,   final String name ,  String value ,   final String type )  {  if  (  innerRequestDataValueProcessor != null )  {  String  processedValue =  innerRequestDataValueProcessor . processFormFieldValue  ( request , name , value , type ) ;  if  (  processedValue != value )  {   value = processedValue ; } }  if  (  name == null )  {  return value ; }  IDataComposer  dataComposer =  HDIVUtil . getDataComposer  ( request ) ;  if  (   dataComposer == null ||   dataComposer . isRequestStarted  ( ) == false )  {  return value ; }  if  (  isEditable  ( type ) )  {   dataComposer . composeFormField  ( name , value , true , type ) ;  return value ; } else  {  String  result =  dataComposer . composeFormField  ( name , value , false , type ) ;  return result ; } }   public  Map  < String , String > getExtraHiddenFields  (   final HttpServletRequest request )  {  IDataComposer  dataComposer =  HDIVUtil . getDataComposer  ( request ) ;   Map  < String , String >  extraFields =  new  HashMap  < String , String >  ( ) ;  if  (  innerRequestDataValueProcessor != null )  {   Map  < String , String >  innerExtras =  innerRequestDataValueProcessor . getExtraHiddenFields  ( request ) ;  if  (  innerExtras != null )  {   extraFields . putAll  ( innerExtras ) ; } }  if  (   dataComposer == null ||   dataComposer . isRequestStarted  ( ) == false )  {  return extraFields ; }  String  requestId =  dataComposer . endRequest  ( ) ;  if  (   requestId != null &&   requestId . length  ( ) > 0 )  {  String  hdivStateParam =  HDIVUtil . getHdivStateParameterName  ( request ) ;  if  (  hdivStateParam != null )  {   extraFields . put  ( hdivStateParam , requestId ) ; }   request . setAttribute  (  FormUrlProcessor . FORM_STATE_ID , requestId ) ; }  return extraFields ; }   public String processUrl  (  HttpServletRequest request ,  String url )  {  if  (  innerRequestDataValueProcessor != null )  {  String  processedUrl =  innerRequestDataValueProcessor . processUrl  ( request , url ) ;  if  (  processedUrl != null )  {   url = processedUrl ; } }  String  result =  linkUrlProcessor . processUrl  ( request , url ) ;  return result ; }   protected boolean isEditable  (  String type )  {  if  (  noEditableTypes . contains  ( type ) )  {  return false ; }  return true ; }   public void setLinkUrlProcessor  (   final LinkUrlProcessor linkUrlProcessor )  {    this . linkUrlProcessor = linkUrlProcessor ; }   public void setFormUrlProcessor  (   final FormUrlProcessor formUrlProcessor )  {    this . formUrlProcessor = formUrlProcessor ; }   public void setInnerRequestDataValueProcessor  (   final RequestDataValueProcessor innerRequestDataValueProcessor )  {    this . innerRequestDataValueProcessor = innerRequestDataValueProcessor ; }   public RequestDataValueProcessor getInnerRequestDataValueProcessor  ( )  {  return innerRequestDataValueProcessor ; } }