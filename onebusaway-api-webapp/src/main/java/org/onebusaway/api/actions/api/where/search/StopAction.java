  package       org . onebusaway . api . actions . api . where . search ;   import     org . apache . struts2 . rest . DefaultHttpHeaders ;  import      org . onebusaway . api . model . transit . BeanFactoryV2 ;  import      org . onebusaway . api . model . transit . StopSearchResultBean ;  import    org . onebusaway . exceptions . ServiceException ;  import     org . onebusaway . transit_data . model . ArrivalsAndDeparturesQueryBean ;  import     org . onebusaway . transit_data . model . ListBean ;  import     org . onebusaway . transit_data . model . RouteSorting ;  import     org . onebusaway . transit_data . model . StopBean ;  import      org . springframework . beans . factory . annotation . Autowired ;  import   java . io . IOException ;  import   java . util . List ;  import    java . util . stream . Collectors ;  import   java . util . Arrays ;   public class StopAction  extends ApiSearchAction  {   private ArrivalsAndDeparturesQueryBean  _query =  new ArrivalsAndDeparturesQueryBean  ( ) ;    @ Autowired private RouteSorting  customRouteSort ;   public StopAction  ( )  {  super  ( V2 ) ; }   public DefaultHttpHeaders index  ( )  throws IOException , ServiceException  {  if  (  isVersion  ( V2 ) )  {   List  < Integer >  routeTypesToBeFiltered =  Arrays . asList  ( 711 , 712 , 713 , 714 ) ;   ListBean  < StopBean >  stopSuggestions =  _service . getStopSuggestions  ( null , _input , maxCount ) ;  if  (   stopSuggestions == null ||   stopSuggestions . getList  ( ) . isEmpty  ( ) )  return  setResourceNotFoundResponse  ( ) ;  BeanFactoryV2  factory =  getBeanFactoryV2  ( ) ;  StopSearchResultBean  result =  new StopSearchResultBean  ( ) ;   List  < StopBean >  filteredStopSuggestions =     stopSuggestions . getList  ( ) . stream  ( ) . filter  (  stopBean ->     stopBean . getRoutes  ( ) != null &&  !   stopBean . getRoutes  ( ) . isEmpty  ( ) &&    stopBean . getRoutes  ( ) . stream  ( ) . noneMatch  (  r ->  routeTypesToBeFiltered . contains  (  r . getType  ( ) ) ) ) . collect  (  Collectors . toList  ( ) ) ;   stopSuggestions . setList  ( filteredStopSuggestions ) ;   result . setStopSuggestions  ( stopSuggestions ) ;   factory . setCustomRouteSort  ( customRouteSort ) ;  return  setOkResponse  (  factory . getResponse  ( result ) ) ; } else  {  return  setUnknownVersionResponse  ( ) ; } } }