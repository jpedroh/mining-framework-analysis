  package    com . sksamuel . jqm4gwt . layout ;   import      com . google . gwt . dom . client . Element ;  import      com . google . gwt . uibinder . client . UiChild ;  import       com . google . gwt . user . client . ui . FlowPanel ;  import    com . sksamuel . jqm4gwt . DataIcon ;  import    com . sksamuel . jqm4gwt . HasCorners ;  import    com . sksamuel . jqm4gwt . HasIconPos ;  import    com . sksamuel . jqm4gwt . HasInset ;  import    com . sksamuel . jqm4gwt . HasMini ;  import    com . sksamuel . jqm4gwt . IconPos ;  import    com . sksamuel . jqm4gwt . JQMCommon ;  import    com . sksamuel . jqm4gwt . JQMWidget ;   public class JQMCollapsibleSet  extends JQMWidget  implements   HasIconPos  < JQMCollapsibleSet > ,  HasMini  < JQMCollapsibleSet > ,  HasInset  < JQMCollapsibleSet > ,  HasCorners  < JQMCollapsibleSet >  {   private final FlowPanel  flow ;   public JQMCollapsibleSet  ( )  {   flow =  new FlowPanel  ( ) ;   initWidget  ( flow ) ;   setDataRole  ( "collapsibleset" ) ;   setId  ( ) ; }    @ UiChild  (  tagname = "collapsible" ) public void add  (  JQMCollapsible c )  {   flow . add  ( c ) ; }   public  int getCollapsibleCount  ( )  {  return  flow . getWidgetCount  ( ) ; }   public JQMCollapsible getCollapsible  (   int index )  {  return  ( JQMCollapsible )  flow . getWidget  ( index ) ; }   public DataIcon getCollapsedIcon  ( )  {  return  DataIcon . fromJqmValue  (  getAttribute  ( "data-collapsed-icon" ) ) ; }   public void setCollapsedIcon  (  DataIcon icon )  {   setAttribute  ( "data-collapsed-icon" ,   icon != null ?  icon . getJqmValue  ( ) : null ) ; }   public DataIcon getExpandedIcon  ( )  {  return  DataIcon . fromJqmValue  (  getAttribute  ( "data-expanded-icon" ) ) ; }   public void setExpandedIcon  (  DataIcon icon )  {   setAttribute  ( "data-expanded-icon" ,   icon != null ?  icon . getJqmValue  ( ) : null ) ; }   public JQMCollapsibleSet removeCollapsedIcon  ( )  {   removeAttribute  ( "data-collapsed-icon" ) ;  return this ; }   public JQMCollapsibleSet removeExpandedIcon  ( )  {   removeAttribute  ( "data-expanded-icon" ) ;  return this ; }   public String getContentTheme  ( )  {  return  getAttribute  ( "data-content-theme" ) ; }    @ Override public IconPos getIconPos  ( )  {  return  JQMCommon . getIconPos  ( this ) ; }    @ Override public boolean isInset  ( )  {  return  getAttributeBoolean  ( "data-inset" ) ; }    @ Override public boolean isMini  ( )  {  return  JQMCommon . isMini  ( this ) ; }   public void remove  (  JQMCollapsible c )  {   flow . remove  ( c ) ; }   public void setContentTheme  (  String theme )  {   setAttribute  ( "data-content-theme" , theme ) ; }    @ Override public void setIconPos  (  IconPos pos )  {   JQMCommon . setIconPos  ( this , pos ) ; }    @ Override public JQMCollapsibleSet withIconPos  (  IconPos pos )  {   setIconPos  ( pos ) ;  return this ; }    @ Override public void setInset  (  boolean inset )  {   setAttribute  ( "data-inset" ,  String . valueOf  ( inset ) ) ; }    @ Override public JQMCollapsibleSet withInset  (  boolean inset )  {   setInset  ( inset ) ;  return this ; }    @ Override public void setMini  (  boolean mini )  {   JQMCommon . setMini  ( this , mini ) ; }    @ Override public JQMCollapsibleSet withMini  (  boolean mini )  {   setMini  ( mini ) ;  return this ; }    @ Override public boolean isCorners  ( )  {  return  JQMCommon . isCorners  ( this ) ; }    @ Override public void setCorners  (  boolean corners )  {   JQMCommon . setCorners  ( this , corners ) ; }    @ Override public JQMCollapsibleSet withCorners  (  boolean corners )  {   setCorners  ( corners ) ;  return this ; }   public void refresh  ( )  {   refresh  (  getElement  ( ) ) ; }   private static native void refresh  (  Element elt ) ; }