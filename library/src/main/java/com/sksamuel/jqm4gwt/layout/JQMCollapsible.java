  package    com . sksamuel . jqm4gwt . layout ;   import      com . google . gwt . dom . client . Element ;  import      com . google . gwt . uibinder . client . UiChild ;  import       com . google . gwt . user . client . ui . DisclosurePanel ;  import       com . google . gwt . user . client . ui . FlowPanel ;  import       com . google . gwt . user . client . ui . Widget ;  import    com . sksamuel . jqm4gwt . DataIcon ;  import    com . sksamuel . jqm4gwt . HasIconPos ;  import    com . sksamuel . jqm4gwt . HasInset ;  import    com . sksamuel . jqm4gwt . HasMini ;  import    com . sksamuel . jqm4gwt . HasText ;  import    com . sksamuel . jqm4gwt . IconPos ;  import    com . sksamuel . jqm4gwt . JQMCommon ;  import    com . sksamuel . jqm4gwt . JQMWidget ;  import     com . sksamuel . jqm4gwt . html . Heading ;   public class JQMCollapsible  extends JQMWidget  implements   HasText  < JQMCollapsible > ,  HasIconPos  < JQMCollapsible > ,  HasMini  < JQMCollapsible > ,  HasInset  < JQMCollapsible >  {   private final FlowPanel  flow ;   private final Heading  header ;   public JQMCollapsible  ( )  {  this  ( null , true ) ; }   public JQMCollapsible  (  String text )  {  this  ( text , true ) ; }   public JQMCollapsible  (  String text ,  boolean collapsed )  {  this  ( text , 3 , collapsed ) ; }   public JQMCollapsible  (  String text ,   int headerN ,  boolean collapsed )  {   flow =  new FlowPanel  ( ) ;   initWidget  ( flow ) ;   header =  new Heading  ( headerN ) ;   flow . add  ( header ) ;   setDataRole  ( "collapsible" ) ;   withCollapsed  ( collapsed ) ;   setText  ( text ) ; }    @ UiChild  (  tagname = "widget" ) public void add  (  Widget widget )  {   flow . add  ( widget ) ; }   public void clear  ( )  {   flow . clear  ( ) ; }   public DataIcon getCollapsedIcon  ( )  {  return  DataIcon . fromJqmValue  (  getAttribute  ( "data-collapsed-icon" ) ) ; }   public void setCollapsedIcon  (  DataIcon icon )  {   setAttribute  ( "data-collapsed-icon" ,   icon != null ?  icon . getJqmValue  ( ) : null ) ; }   public DataIcon getExpandedIcon  ( )  {  return  DataIcon . fromJqmValue  (  getAttribute  ( "data-expanded-icon" ) ) ; }   public void setExpandedIcon  (  DataIcon icon )  {   setAttribute  ( "data-expanded-icon" ,   icon != null ?  icon . getJqmValue  ( ) : null ) ; }   public JQMCollapsible removeCollapsedIcon  ( )  {   removeAttribute  ( "data-collapsed-icon" ) ;  return this ; }   public JQMCollapsible removeExpandedIcon  ( )  {   removeAttribute  ( "data-expanded-icon" ) ;  return this ; }   public String getContentTheme  ( )  {  return  getAttribute  ( "data-content-theme" ) ; }    @ Override public IconPos getIconPos  ( )  {  return  JQMCommon . getIconPos  ( this ) ; }    @ Override public String getText  ( )  {  return  header . getText  ( ) ; }   public boolean isCollapsed  ( )  {  return  getAttributeBoolean  ( "data-collapsed" ) ; }   public void setCollapsed  (  boolean collapsed )  {  if  ( collapsed )   removeAttribute  ( "data-collapsed" ) ; else   setAttribute  ( "data-collapsed" , "false" ) ; }   public JQMCollapsible withCollapsed  (  boolean collapsed )  {   setCollapsed  ( collapsed ) ;  return this ; }    @ Override public boolean isInset  ( )  {  return  getAttributeBoolean  ( "data-inset" ) ; }    @ Override public boolean isMini  ( )  {  return  JQMCommon . isMini  ( this ) ; }   public boolean remove  (  Widget widget )  {  return  flow . remove  ( widget ) ; }   public JQMCollapsible setContentTheme  (  String theme )  {   setAttribute  ( "data-content-theme" , theme ) ;  return this ; }    @ Override public void setIconPos  (  IconPos pos )  {   JQMCommon . setIconPos  ( this , pos ) ; }    @ Override public JQMCollapsible withIconPos  (  IconPos pos )  {   setIconPos  ( pos ) ;  return this ; }    @ Override public void setInset  (  boolean inset )  {   setAttribute  ( "data-inset" ,  String . valueOf  ( inset ) ) ; }    @ Override public JQMCollapsible withInset  (  boolean inset )  {   setInset  ( inset ) ;  return this ; }    @ Override public void setMini  (  boolean mini )  {   JQMCommon . setMini  ( this , mini ) ; }    @ Override public JQMCollapsible withMini  (  boolean mini )  {   setMini  ( mini ) ;  return this ; }    @ Override public void setText  (  String text )  {   header . setText  ( text ) ; }    @ Override public JQMCollapsible withText  (  String text )  {   setText  ( text ) ;  return this ; }   public void expand  ( )  {   execExpand  (  getElement  ( ) ) ; }   public void collapse  ( )  {   execCollapse  (  getElement  ( ) ) ; }   private static native void execExpand  (  Element elt ) ;   private static native void execCollapse  (  Element elt ) ; }