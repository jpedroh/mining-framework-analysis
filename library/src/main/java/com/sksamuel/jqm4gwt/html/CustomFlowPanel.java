  package    com . sksamuel . jqm4gwt . html ;   import      com . google . gwt . dom . client . Element ;  import      com . google . gwt . dom . client . Node ;  import       com . google . gwt . user . client . ui . AttachDetachException ;  import       com . google . gwt . user . client . ui . ComplexPanel ;  import       com . google . gwt . user . client . ui . IsWidget ;  import       com . google . gwt . user . client . ui . Widget ;  import       com . google . gwt . user . client . ui . WidgetCollection ;   public class CustomFlowPanel  extends ComplexPanel  {   public CustomFlowPanel  (  Element e )  {   setElement  ( e ) ; }   private  AttachDetachException . Command  orphanCommand ;   private WidgetCollection  children = null ;    @ Override protected WidgetCollection getChildren  ( )  {  return   children != null ? children :  super . getChildren  ( ) ; }   private void _doLogicalClear  ( )  {  if  (  orphanCommand == null )  {   orphanCommand =  new  AttachDetachException . Command  ( )  {    @ Override public void execute  (  Widget w )  {   orphan  ( w ) ; } } ; }  try  {   AttachDetachException . tryCommand  ( this , orphanCommand ) ; }  finally  {   children =  new WidgetCollection  ( this ) ; } }    @ Override public void add  (  Widget w )  {  Element  elt =  getElement  ( ) ;   add  ( w , elt ) ; }    @ Override public void clear  ( )  {  try  {   _doLogicalClear  ( ) ; }  finally  {  Node  child =   getElement  ( ) . getFirstChild  ( ) ;  while  (  child != null )  {    getElement  ( ) . removeChild  ( child ) ;   child =   getElement  ( ) . getFirstChild  ( ) ; } } }   public void insert  (  IsWidget w ,   int beforeIndex )  {   insert  (  asWidgetOrNull  ( w ) , beforeIndex ) ; }   public void insert  (  Widget w ,   int beforeIndex )  {  Element  elt =  getElement  ( ) ;   insert  ( w , elt , beforeIndex , true ) ; } }