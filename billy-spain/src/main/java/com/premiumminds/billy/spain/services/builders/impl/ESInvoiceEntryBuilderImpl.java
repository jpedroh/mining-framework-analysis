  package       com . premiumminds . billy . spain . services . builders . impl ;   import   javax . inject . Inject ;  import      com . premiumminds . billy . core . exceptions . BillyValidationException ;  import         com . premiumminds . billy . core . services . entities . documents . GenericInvoice . CreditOrDebit ;  import      com . premiumminds . billy . core . util . Localizer ;  import       com . premiumminds . billy . spain . persistence . dao . DAOESInvoice ;  import       com . premiumminds . billy . spain . persistence . dao . DAOESInvoiceEntry ;  import       com . premiumminds . billy . spain . persistence . dao . DAOESProduct ;  import       com . premiumminds . billy . spain . persistence . dao . DAOESRegionContext ;  import       com . premiumminds . billy . spain . persistence . dao . DAOESTax ;  import       com . premiumminds . billy . spain . persistence . entities . ESInvoiceEntryEntity ;  import       com . premiumminds . billy . spain . services . builders . ESInvoiceEntryBuilder ;  import       com . premiumminds . billy . spain . services . entities . ESInvoiceEntry ;   public class ESInvoiceEntryBuilderImpl  <  TBuilder  extends  ESInvoiceEntryBuilderImpl  < TBuilder , TEntry > ,  TEntry  extends ESInvoiceEntry >  extends  ESGenericInvoiceEntryBuilderImpl  < TBuilder , TEntry , DAOESInvoiceEntry , DAOESInvoice >  implements   ESInvoiceEntryBuilder  < TBuilder , TEntry >  {   protected static final Localizer  LOCALIZER =  new Localizer  ( "com/premiumminds/billy/core/i18n/FieldNames" ) ;    @ Inject public ESInvoiceEntryBuilderImpl  (  DAOESInvoiceEntry daoESEntry ,  DAOESInvoice daoESInvoice ,  DAOESTax daoESTax ,  DAOESProduct daoESProduct ,  DAOESRegionContext daoESRegionContext )  {  super  ( daoESEntry , daoESInvoice , daoESTax , daoESProduct , daoESRegionContext ) ; }    @ Override protected ESInvoiceEntryEntity getTypeInstance  ( )  {  return  ( ESInvoiceEntryEntity )  super . getTypeInstance  ( ) ; }    @ Override protected void validateInstance  ( )  throws BillyValidationException  {    this . getTypeInstance  ( ) . setCreditOrDebit  (  CreditOrDebit . CREDIT ) ;   super . validateInstance  ( ) ; } }