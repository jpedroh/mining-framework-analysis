  package ninja ;   import   java . io . BufferedReader ;  import   java . io . IOException ;  import   java . io . InputStream ;  import   java . util . List ;  import   java . util . Map ;  import   ninja . bodyparser . BodyParserEngineJson ;  import   ninja . bodyparser . BodyParserEngineManager ;  import   ninja . bodyparser . BodyParserEngineXml ;  import   ninja . session . FlashScope ;  import   ninja . session . Session ;  import   ninja . utils . ResponseStreams ;  import   ninja . validation . Validation ;  import     org . apache . commons . fileupload . FileItemIterator ;  import   ninja . uploads . FileItem ;  import   ninja . uploads . FileItemProvider ;  import   ninja . uploads . FileProvider ;   public interface Context  {  interface Impl  extends  Context  {  void setRoute  (  Route route ) ; }   public String  CONTENT_TYPE = "Content-Type" ;   public String  X_FORWARD_HEADER = "X-Forwarded-For" ;   public String  NINJA_PROPERTIES_X_FORWARDED_FOR = "ninja.x_forwarded_for_enabled" ;    @ Deprecated enum HTTP_STATUS  {  notFound404  ( 404 ) ,  ok200  ( 200 ) ,  forbidden403  ( 403 ) ,  teapot418  ( 418 ) ,  badRequest400  ( 400 ) ,  noContent204  ( 204 ) ,  created201  ( 201 )  ;   public final  int  code ;   private HTTP_STATUS  (   int code )  {    this . code = code ; } }  String getRequestContentType  ( ) ;    @ Deprecated String getRequestUri  ( ) ;  String getHostname  ( ) ;  String getScheme  ( ) ;   public String getRemoteAddr  ( ) ;  String getRequestPath  ( ) ;  FlashScope getFlashScope  ( ) ;    @ Deprecated FlashScope getFlashCookie  ( ) ;  Session getSession  ( ) ;    @ Deprecated Session getSessionCookie  ( ) ;  Cookie getCookie  (  String cookieName ) ;  boolean hasCookie  (  String cookieName ) ;   List  < Cookie > getCookies  ( ) ;  String getContextPath  ( ) ;  String getParameter  (  String name ) ;   List  < String > getParameterValues  (  String name ) ;  String getParameter  (  String name ,  String defaultValue ) ;  Integer getParameterAsInteger  (  String name ) ;  Integer getParameterAsInteger  (  String name ,  Integer defaultValue ) ;   <  T > T getParameterAs  (  String name ,   Class  < T > clazz ) ;   <  T > T getParameterAs  (  String name ,   Class  < T > clazz ,  T defaultValue ) ;  String getPathParameter  (  String name ) ;  String getPathParameterEncoded  (  String name ) ;  Integer getPathParameterAsInteger  (  String key ) ;   Map  < String ,  String  [ ] > getParameters  ( ) ;  String getHeader  (  String name ) ;   List  < String > getHeaders  (  String name ) ;   Map  < String ,  List  < String > > getHeaders  ( ) ;  String getCookieValue  (  String name ) ;   <  T > T parseBody  (   Class  < T > classOfT ) ;  boolean isAsync  ( ) ;  void handleAsync  ( ) ;  void returnResultAsync  (  Result result ) ;  void asyncRequestComplete  ( ) ;  Result controllerReturned  ( ) ;  ResponseStreams finalizeHeaders  (  Result result ) ;  ResponseStreams finalizeHeadersWithoutFlashAndSessionCookie  (  Result result ) ;  InputStream getInputStream  ( )  throws IOException ;  BufferedReader getReader  ( )  throws IOException ;  Route getRoute  ( ) ;  boolean isMultipart  ( ) ;    @ Deprecated FileItemIterator getFileItemIterator  ( ) ;  Validation getValidation  ( ) ;  String getAcceptContentType  ( ) ;  String getAcceptEncoding  ( ) ;  String getAcceptLanguage  ( ) ;  String getAcceptCharset  ( ) ;  String getMethod  ( ) ;  Object getAttribute  (  String name ) ;   <  T > T getAttribute  (  String name ,   Class  < T > clazz ) ;  void setAttribute  (  String name ,  Object value ) ;   Map  < String , Object > getAttributes  ( ) ;  boolean isRequestJson  ( ) ;  boolean isRequestXml  ( ) ;  void addCookie  (  Cookie cookie ) ;  void unsetCookie  (  Cookie cookie ) ;  FileItem getParameterAsFileItem  (  String name ) ;   List  < FileItem > getParameterAsFileItems  (  String name ) ;   Map  < String ,  FileItem  [ ] > getParameterFileItems  ( ) ;  void cleanup  ( ) ; }