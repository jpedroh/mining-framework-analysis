  package ninja ;   import   ninja . params . ControllerMethodInvoker ;  import    com . google . inject . Provider ;  class FilterChainEnd  implements  FilterChain  {   private  Provider  <  ? >  controllerProvider ;   private ControllerMethodInvoker  controllerMethodInvoker ;  FilterChainEnd  (   Provider  <  ? > controllerProvider ,  ControllerMethodInvoker controllerMethodInvoker )  {    this . controllerProvider = controllerProvider ;    this . controllerMethodInvoker = controllerMethodInvoker ; }    @ Override public Result next  (  Context context )  { 
<<<<<<<
=======
 if  (  result != null )  {  return  result . copy  ( ) ; }
>>>>>>>
  Result  controllerResult =  ( Result )  controllerMethodInvoker . invoke  (  controllerProvider . get  ( ) , context ) ;  if  (  controllerResult instanceof AsyncResult )  {   context . handleAsync  ( ) ;  Result  newResult =  context . controllerReturned  ( ) ;  if  (  newResult != null )  {   controllerResult = newResult ; } }  return controllerResult ; } }