  package   org . openapitools . api ;   import    org . openapitools . model . ModelApiResponse ;  import    org . openapitools . model . Pet ;  import   java . util . Set ;  import    org . springframework . http . HttpStatus ;  import    org . springframework . http . MediaType ;  import    org . springframework . http . ResponseEntity ;  import      org . springframework . web . context . request . NativeWebRequest ;  import     org . springframework . web . multipart . MultipartFile ;  import   java . util . List ;  import   java . util . Map ;  import   java . util . Optional ;  import   javax . annotation . Generated ;   public  @ Generated  (  value = "org.openapitools.codegen.languages.SpringCodegen" ) interface PetApiDelegate  {   default  Optional  < NativeWebRequest > getRequest  ( )  {  return  Optional . empty  ( ) ; }   default  ResponseEntity  < Void > addPet  (  Pet body )  {  return  new  ResponseEntity  < >  (  HttpStatus . NOT_IMPLEMENTED ) ; }   default  ResponseEntity  < Void > deletePet  (  Long petId ,  String apiKey )  {  return  new  ResponseEntity  < >  (  HttpStatus . NOT_IMPLEMENTED ) ; }   default  ResponseEntity  <  List  < Pet > > findPetsByStatus  (   List  < String > status )  {    getRequest  ( ) . ifPresent  (  request ->  {  for ( MediaType mediaType :  MediaType . parseMediaTypes  (  request . getHeader  ( "Accept" ) ) )  {  if  (  mediaType . isCompatibleWith  (  MediaType . valueOf  ( "application/json" ) ) )  {  String  exampleString = "{ \"photoUrls\" : [ \"photoUrls\", \"photoUrls\" ], \"name\" : \"doggie\", \"id\" : 0, \"category\" : { \"name\" : \"default-name\", \"id\" : 6 }, \"tags\" : [ { \"name\" : \"name\", \"id\" : 1 }, { \"name\" : \"name\", \"id\" : 1 } ], \"status\" : \"available\" }" ;   ApiUtil . setExampleResponse  ( request , "application/json" , exampleString ) ;  break ; }  if  (  mediaType . isCompatibleWith  (  MediaType . valueOf  ( "application/xml" ) ) )  {  String  exampleString = "<Pet> <id>123456789</id> <name>doggie</name> <photoUrls> <photoUrls>aeiou</photoUrls> </photoUrls> <tags> </tags> <status>aeiou</status> </Pet>" ;   ApiUtil . setExampleResponse  ( request , "application/xml" , exampleString ) ;  break ; } } } ) ;  return  new  ResponseEntity  < >  (  HttpStatus . NOT_IMPLEMENTED ) ; }   default  @ Deprecated  ResponseEntity  <  Set  < Pet > > findPetsByTags  (   Set  < String > tags )  {    getRequest  ( ) . ifPresent  (  request ->  {  for ( MediaType mediaType :  MediaType . parseMediaTypes  (  request . getHeader  ( "Accept" ) ) )  {  if  (  mediaType . isCompatibleWith  (  MediaType . valueOf  ( "application/json" ) ) )  {  String  exampleString = "{ \"photoUrls\" : [ \"photoUrls\", \"photoUrls\" ], \"name\" : \"doggie\", \"id\" : 0, \"category\" : { \"name\" : \"default-name\", \"id\" : 6 }, \"tags\" : [ { \"name\" : \"name\", \"id\" : 1 }, { \"name\" : \"name\", \"id\" : 1 } ], \"status\" : \"available\" }" ;   ApiUtil . setExampleResponse  ( request , "application/json" , exampleString ) ;  break ; }  if  (  mediaType . isCompatibleWith  (  MediaType . valueOf  ( "application/xml" ) ) )  {  String  exampleString = "<Pet> <id>123456789</id> <name>doggie</name> <photoUrls> <photoUrls>aeiou</photoUrls> </photoUrls> <tags> </tags> <status>aeiou</status> </Pet>" ;   ApiUtil . setExampleResponse  ( request , "application/xml" , exampleString ) ;  break ; } } } ) ;  return  new  ResponseEntity  < >  (  HttpStatus . NOT_IMPLEMENTED ) ; }   default  ResponseEntity  < Pet > getPetById  (  Long petId )  {    getRequest  ( ) . ifPresent  (  request ->  {  for ( MediaType mediaType :  MediaType . parseMediaTypes  (  request . getHeader  ( "Accept" ) ) )  {  if  (  mediaType . isCompatibleWith  (  MediaType . valueOf  ( "application/json" ) ) )  {  String  exampleString = "{ \"photoUrls\" : [ \"photoUrls\", \"photoUrls\" ], \"name\" : \"doggie\", \"id\" : 0, \"category\" : { \"name\" : \"default-name\", \"id\" : 6 }, \"tags\" : [ { \"name\" : \"name\", \"id\" : 1 }, { \"name\" : \"name\", \"id\" : 1 } ], \"status\" : \"available\" }" ;   ApiUtil . setExampleResponse  ( request , "application/json" , exampleString ) ;  break ; }  if  (  mediaType . isCompatibleWith  (  MediaType . valueOf  ( "application/xml" ) ) )  {  String  exampleString = "<Pet> <id>123456789</id> <name>doggie</name> <photoUrls> <photoUrls>aeiou</photoUrls> </photoUrls> <tags> </tags> <status>aeiou</status> </Pet>" ;   ApiUtil . setExampleResponse  ( request , "application/xml" , exampleString ) ;  break ; } } } ) ;  return  new  ResponseEntity  < >  (  HttpStatus . NOT_IMPLEMENTED ) ; }   default  ResponseEntity  < Void > updatePet  (  Pet body )  {  return  new  ResponseEntity  < >  (  HttpStatus . NOT_IMPLEMENTED ) ; }   default  ResponseEntity  < Void > updatePetWithForm  (  Long petId ,  String name ,  String status )  {  return  new  ResponseEntity  < >  (  HttpStatus . NOT_IMPLEMENTED ) ; }   default  ResponseEntity  < ModelApiResponse > uploadFile  (  Long petId ,  String additionalMetadata ,  MultipartFile file )  {    getRequest  ( ) . ifPresent  (  request ->  {  for ( MediaType mediaType :  MediaType . parseMediaTypes  (  request . getHeader  ( "Accept" ) ) )  {  if  (  mediaType . isCompatibleWith  (  MediaType . valueOf  ( "application/json" ) ) )  {  String  exampleString = "{ \"code\" : 0, \"type\" : \"type\", \"message\" : \"message\" }" ;   ApiUtil . setExampleResponse  ( request , "application/json" , exampleString ) ;  break ; } } } ) ;  return  new  ResponseEntity  < >  (  HttpStatus . NOT_IMPLEMENTED ) ; } }