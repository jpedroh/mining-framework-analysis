  package     com . github . javaparser . ast . nodeTypes ;   import     com . github . javaparser . ast . Node ;  import     com . github . javaparser . ast . NodeList ;  import      com . github . javaparser . ast . type . ClassOrInterfaceType ;   public interface NodeWithImplements  <  N  extends Node >  {   NodeList  < ClassOrInterfaceType > getImplementedTypes  ( ) ;   default ClassOrInterfaceType getImplementedTypes  (   int i )  {  return   getImplementedTypes  ( ) . get  ( i ) ; }  N setImplementedTypes  (   NodeList  < ClassOrInterfaceType > implementsList ) ;    @ SuppressWarnings  ( "unchecked" ) default N addImplements  (  String name )  {  ClassOrInterfaceType  classOrInterfaceType =  new ClassOrInterfaceType  ( name ) ;    getImplementedTypes  ( ) . add  ( classOrInterfaceType ) ;   classOrInterfaceType . setParentNode  (  ( Node ) this ) ;  return  ( N ) this ; }   default N addImplements  (   Class  <  ? > clazz )  {    (  ( Node ) this ) . tryAddImportToParentCompilationUnit  ( clazz ) ;  return  addImplements  (  clazz . getSimpleName  ( ) ) ; } }