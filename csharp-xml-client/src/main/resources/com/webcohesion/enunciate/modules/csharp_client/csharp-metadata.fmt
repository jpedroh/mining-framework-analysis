[#ftl]
[#--

    Copyright Â© 2006-2016 Web Cohesion (info@webcohesion.com)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

--]
[#macro writeTypeMetadata typeDef]
  [#-- @ftlvariable name="typeDef" type="com.webcohesion.enunciate.modules.jaxb.model.TypeDefinition" --]
  [System.SerializableAttribute()]
  [System.Xml.Serialization.XmlTypeAttribute(Namespace="${typeDef.namespace!""}",TypeName="${typeDef.name!""}")]
[#if typeDef.namespace??]
  [System.Xml.Serialization.SoapTypeAttribute(Namespace="${typeDef.namespace}",TypeName="${typeDef.name!""}")]
[#else]
  [System.Xml.Serialization.SoapTypeAttribute(TypeName="${typeDef.name!""}")]
[/#if]
[#if findRootElement(typeDef)??]
  [System.Xml.Serialization.XmlRootAttribute(Namespace="${findRootElement(typeDef).namespace!""}",ElementName="${findRootElement(typeDef).name}")]
[/#if]
[#if typeDef.seeAlsos??]
  [#list typeDef.seeAlsos as seeAlso]
  [System.Xml.Serialization.XmlIncludeAttribute(typeof(${classnameFor(seeAlso)}))]
  [/#list]
[/#if]
[/#macro]
[#macro writeAccessorMetadata accessor]
[#if accessor.annotations["jakarta.xml.bind.annotation.XmlAnyAttribute"]??]
    [System.Xml.Serialization.XmlAnyAttributeAttribute()]
[/#if]
[#if accessor.annotations["jakarta.xml.bind.annotation.XmlAnyElement"]??]
    [System.Xml.Serialization.XmlAnyElementAttribute()]
[/#if]
[#if accessor.annotations["jakarta.xml.bind.annotation.XmlAttachmentRef"]??]
    [#-- todo: what about an attachment? --]
[/#if]
[#if accessor.wrapped!false]
    [System.Xml.Serialization.XmlArrayAttribute(ElementName="${accessor.wrapperName}",Namespace="${accessor.wrapperNamespace!""}"[#if accessor.wrapperNillable],IsNullable=true[/#if])]
[/#if]
[#if accessor.attribute]
    [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="${accessor.name}"[#if accessor.ref??],Namespace="${accessor.namespace!""}"[#elseif accessor.formQualified!false],Form=System.Xml.Schema.XmlSchemaForm.Qualified[/#if][#if accessor.xmlID],DataType="ID"[#elseif accessor.xmlIDREF],DataType="IDREF"[/#if])]
    [System.Xml.Serialization.SoapAttributeAttribute(AttributeName="${accessor.name}"[#if accessor.ref??],Namespace="${accessor.namespace!""}"[#elseif accessor.formQualified!false],Form=System.Xml.Schema.XmlSchemaForm.Qualified[/#if][#if accessor.xmlID],DataType="ID"[#elseif accessor.xmlIDREF],DataType="IDREF"[/#if])]
[#elseif accessor.value]
    [System.Xml.Serialization.XmlTextAttribute([#if accessor.xmlID]DataType="ID"[#elseif accessor.xmlIDREF]DataType="IDREF"[/#if])]
[#elseif accessor.elementRefs!false]
    [[#list accessor.choices as choice]System.Xml.Serialization.[#if accessor.wrapped]XmlArrayItemAttribute[#else]XmlElementAttribute[/#if](typeof(${classnameFor(choice)}),ElementName="${choice.ref.localPart}",Namespace="${choice.ref.namespaceURI}")[#if choice_has_next],
     [/#if][/#list]]
[#elseif accessor.elementRef]
    [System.Xml.Serialization.[#if accessor.wrapped]XmlArrayItemAttribute[#else]XmlElementAttribute[/#if](ElementName="${accessor.ref.localPart}",Namespace="${accessor.namespace!""}")]
    [System.Xml.Serialization.SoapElementAttribute(ElementName="${accessor.ref.localPart}")]
[#elseif accessor.choices?size > 1]
    [[#list accessor.choices as choice]System.Xml.Serialization.[#if accessor.wrapped]XmlArrayItemAttribute[#else]XmlElementAttribute[/#if](typeof(${classnameFor(choice)}),ElementName="${choice.name}",Namespace="${choice.namespace!""}"[#if choice.nillable?? && choice.nillable],IsNullable=true[/#if])[#if choice_has_next],
     [/#if][/#list]]
[#elseif ((!accessor.adapted) && (accessor.accessorType.map!false))]
    [#--can't do an @XmlElementAnnotation on a map--]
[#else]
    [System.Xml.Serialization.[#if accessor.wrapped]XmlArrayItemAttribute[#else]XmlElementAttribute[/#if](ElementName="${accessor.name}",Namespace="${accessor.namespace!""}"[#if accessor.nillable?? && accessor.nillable],IsNullable=true[/#if][#if accessor.xmlID],DataType="ID"[#elseif accessor.xmlIDREF],DataType="IDREF"[/#if])]
    [System.Xml.Serialization.SoapElementAttribute(ElementName="${accessor.name}"[#if accessor.nillable?? && accessor.nillable],IsNullable=true[/#if][#if accessor.xmlID],DataType="ID"[#elseif accessor.xmlIDREF],DataType="IDREF"[/#if])]
[/#if]
[#if accessor.annotations["jakarta.xml.bind.annotation.XmlInlineBinaryData"]??]
  [#-- todo: what about an attachment? --]
[/#if]
[#if accessor.mimeType??]
  [#-- todo: what about an attachment? --]
[/#if]
[/#macro]
