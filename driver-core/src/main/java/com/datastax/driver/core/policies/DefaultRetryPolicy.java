  package     com . datastax . driver . core . policies ;   import     com . datastax . driver . core . ConsistencyLevel ;  import     com . datastax . driver . core . Query ;  import     com . datastax . driver . core . WriteType ;   public class DefaultRetryPolicy  implements  RetryPolicy  {   public static final DefaultRetryPolicy  INSTANCE =  new DefaultRetryPolicy  ( ) ;   private DefaultRetryPolicy  ( )  { }    @ Override public RetryDecision onReadTimeout  (  Statement statement ,  ConsistencyLevel cl ,   int requiredResponses ,   int receivedResponses ,  boolean dataRetrieved ,   int nbRetry )  {  if  (  nbRetry != 0 )  return  RetryDecision . rethrow  ( ) ;  return    receivedResponses >= requiredResponses &&  ! dataRetrieved ?  RetryDecision . retry  ( cl ) :  RetryDecision . rethrow  ( ) ; }    @ Override public RetryDecision onWriteTimeout  (  Statement statement ,  ConsistencyLevel cl ,  WriteType writeType ,   int requiredAcks ,   int receivedAcks ,   int nbRetry )  {  if  (  nbRetry != 0 )  return  RetryDecision . rethrow  ( ) ;  return   writeType ==  WriteType . BATCH_LOG ?  RetryDecision . retry  ( cl ) :  RetryDecision . rethrow  ( ) ; }    @ Override public RetryDecision onUnavailable  (  Statement statement ,  ConsistencyLevel cl ,   int requiredReplica ,   int aliveReplica ,   int nbRetry )  {  return  RetryDecision . rethrow  ( ) ; } }