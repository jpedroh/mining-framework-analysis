  package    org . hdiv . taglib . html ;   import    javax . servlet . http . HttpServletRequest ;  import    javax . servlet . http . HttpServletResponse ;  import    javax . servlet . jsp . JspException ;  import    org . apache . struts . Globals ;  import     org . apache . struts . taglib . TagUtils ;  import      org . apache . struts . taglib . html . FormTag ;  import    org . hdiv . dataComposer . IDataComposer ;  import    org . hdiv . urlProcessor . FormUrlProcessor ;  import    org . hdiv . util . Constants ;  import    org . hdiv . util . HDIVUtil ;   public class FormTagHDIV  extends FormTag  {   private static final  long  serialVersionUID = 5073853465806606664L ;   protected FormUrlProcessor  formUrlProcessor ;   protected void renderAction  (   final StringBuilder results )  {   final HttpServletResponse  response =  ( HttpServletResponse )   this . pageContext . getResponse  ( ) ;   final HttpServletRequest  request =  ( HttpServletRequest )   this . pageContext . getRequest  ( ) ;   final String  calcAction =  (    this . action == null ?  this . getPostbackAction  ( ) :  this . action ) ;   final String  url =  response . encodeURL  (   TagUtils . getInstance  ( ) . getActionMappingURL  ( calcAction ,  this . pageContext ) ) ;  if  (   this . formUrlProcessor == null )  {    this . formUrlProcessor =  HDIVUtil . getFormUrlProcessor  (   request . getSession  ( ) . getServletContext  ( ) ) ; }   final String  encodedURL =  formUrlProcessor . processUrl  ( request , url ) ;   results . append  ( " action=\"" ) ;   results . append  ( encodedURL ) ;   results . append  ( "\"" ) ; }   public String getPostbackAction  ( )  {   final HttpServletRequest  request =  ( HttpServletRequest )  pageContext . getRequest  ( ) ;  String  tempPostbackAction =  ( String )  request . getAttribute  (  Globals . ORIGINAL_URI_KEY ) ;   final String  prefix =  moduleConfig . getPrefix  ( ) ;  if  (    tempPostbackAction != null &&   prefix . length  ( ) > 0 &&  tempPostbackAction . startsWith  ( prefix ) )  {   tempPostbackAction =  tempPostbackAction . substring  (  prefix . length  ( ) ) ; }  return tempPostbackAction ; }    @ Override public  int doEndTag  ( )  throws JspException  {   this . addHDIVParameter  ( ) ;  return  super . doEndTag  ( ) ; }   protected void addHDIVParameter  ( )  throws JspException  {   final HttpServletRequest  request =  ( HttpServletRequest )   this . pageContext . getRequest  ( ) ;   final IDataComposer  dataComposer =  HDIVUtil . getDataComposer  ( request ) ;  if  (  !  dataComposer . isRequestStarted  ( ) )  {  return ; }   final String  requestId =  dataComposer . endRequest  ( ) ;  if  (   requestId . length  ( ) > 0 )  {   final String  hdivParameter =  HDIVUtil . getHdivStateParameterName  ( request ) ;    TagUtils . getInstance  ( ) . write  ( pageContext ,  this . generateHiddenTag  ( hdivParameter , requestId ) ) ; } }   private String generateHiddenTag  (   final String name ,   final String requestId )  {   final StringBuffer  hdivParameter =  new StringBuffer  ( 32 ) ;   hdivParameter . append  ( "<input type=\"hidden\"" ) ;   renderAttribute  ( hdivParameter , "name" , name ) ;   renderAttribute  ( hdivParameter , "value" , requestId ) ;   hdivParameter . append  ( ">\n" ) ;  return  hdivParameter . toString  ( ) ; } }