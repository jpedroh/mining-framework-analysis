  package   hudson . plugins . build_timeout ;   import   jenkins . model . Jenkins ;  import  hudson . ExtensionPoint ;  import   hudson . model . AbstractBuild ;  import   hudson . model . Action ;  import   hudson . model . BuildListener ;  import   hudson . model . Describable ;  import      edu . umd . cs . findbugs . annotations . NonNull ;   public abstract class BuildTimeOutOperation  implements  ExtensionPoint ,  Describable  < BuildTimeOutOperation >  {   public abstract boolean perform  (    @ NonNull  AbstractBuild  <  ? ,  ? > build ,    @ NonNull BuildListener listener ,   long effectiveTimeout ) ;   public BuildTimeOutOperationDescriptor getDescriptor  ( )  {  return  ( BuildTimeOutOperationDescriptor )   Jenkins . getActiveInstance  ( ) . getDescriptorOrDie  (  getClass  ( ) ) ; }   public void addAction  (    @ Nonnull  AbstractBuild  <  ? ,  ? > build ,    @ Nonnull String reason )  {  BuildTimeOutAction  buildTimeoutAction =  build . getAction  (  BuildTimeOutAction . class ) ;  if  (  buildTimeoutAction == null )  {   buildTimeoutAction =  new BuildTimeOutAction  ( reason ) ; }   build . addAction  ( buildTimeoutAction ) ; } }