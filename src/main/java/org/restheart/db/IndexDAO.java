  package   org . restheart . db ;   import   com . mongodb . BasicDBObject ;  import   com . mongodb . DBObject ;  import   com . mongodb . MongoClient ;  import    org . restheart . utils . HttpStatus ;  import   java . util . List ;   public class IndexDAO  {   private final MongoClient  client =   MongoDBClientSingleton . getInstance  ( ) . getClient  ( ) ;   public static final BasicDBObject  METADATA_QUERY =  new BasicDBObject  ( "_id" , "_properties" ) ;   private static final BasicDBObject  fieldsToReturnIndexes ;  static  {   fieldsToReturnIndexes =  new BasicDBObject  ( ) ;   fieldsToReturnIndexes . put  ( "key" , 1 ) ;   fieldsToReturnIndexes . put  ( "name" , 1 ) ; }   public  List  < DBObject > getCollectionIndexes  (  String dbName ,  String collName )  {   List  < DBObject >  indexes =      client . getDB  ( dbName ) . getCollection  ( "system.indexes" ) . find  (  new BasicDBObject  ( "ns" ,   dbName + "." + collName ) , fieldsToReturnIndexes ) . sort  (  new BasicDBObject  ( "name" , 1 ) ) . toArray  ( ) ;   indexes . forEach  (   ( i ) ->  {   i . put  ( "_id" ,  i . get  ( "name" ) ) ;   i . removeField  ( "name" ) ; } ) ;  return indexes ; }   public void createIndex  (  String db ,  String collection ,  DBObject keys ,  DBObject ops )  {  if  (  ops == null )  {     client . getDB  ( db ) . getCollection  ( collection ) . createIndex  ( keys ) ; } else  {     client . getDB  ( db ) . getCollection  ( collection ) . createIndex  ( keys , ops ) ; } }   public  int deleteIndex  (  String db ,  String collection ,  String indexId )  {     client . getDB  ( db ) . getCollection  ( collection ) . dropIndex  ( indexId ) ;  return  HttpStatus . SC_NO_CONTENT ; }   public IndexDAO  ( )  {   client =   MongoDBClientSingleton . getInstance  ( ) . getClient  ( ) ; } }