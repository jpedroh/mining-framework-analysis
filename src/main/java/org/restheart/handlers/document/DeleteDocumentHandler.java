  package    org . restheart . handlers . document ;   import    org . restheart . db . DocumentDAO ;  import    org . restheart . handlers . PipedHttpHandler ;  import    org . restheart . utils . HttpStatus ;  import    org . restheart . handlers . RequestContext ;  import    org . restheart . utils . RequestHelper ;  import    org . restheart . utils . ResponseHelper ;  import    io . undertow . server . HttpServerExchange ;  import    org . bson . types . ObjectId ;   public class DeleteDocumentHandler  extends PipedHttpHandler  {   public DeleteDocumentHandler  ( )  {  super  ( null ) ; }    @ Override public void handleRequest  (  HttpServerExchange exchange ,  RequestContext context )  throws Exception  {  ObjectId  etag =  RequestHelper . getWriteEtag  ( exchange ) ;  if  (  etag == null )  {   ResponseHelper . endExchange  ( exchange ,  HttpStatus . SC_CONFLICT ) ;  return ; }   int  httpCode =   new DocumentDAO  ( ) . deleteDocument  (  context . getDBName  ( ) ,  context . getCollectionName  ( ) ,  context . getDocumentId  ( ) , etag ) ;  if  (    context . getWarnings  ( ) != null &&  !   context . getWarnings  ( ) . isEmpty  ( ) )  {   sendWarnings  ( httpCode , exchange , context ) ; } else  {   exchange . setResponseCode  ( httpCode ) ; }   exchange . endExchange  ( ) ; } }