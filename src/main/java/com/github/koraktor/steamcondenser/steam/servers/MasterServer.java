  package      com . github . koraktor . steamcondenser . steam . servers ;   import   java . net . InetAddress ;  import   java . net . InetSocketAddress ;  import   java . util . Vector ;  import    java . util . concurrent . TimeoutException ;  import   org . slf4j . Logger ;  import   org . slf4j . LoggerFactory ;  import      com . github . koraktor . steamcondenser . exceptions . SteamCondenserException ;  import       com . github . koraktor . steamcondenser . steam . packets . A2M_GET_SERVERS_BATCH2_Paket ;  import       com . github . koraktor . steamcondenser . steam . packets . M2A_SERVER_BATCH_Paket ;  import       com . github . koraktor . steamcondenser . steam . sockets . MasterServerSocket ;   public class MasterServer  extends Server  {   protected static final Logger  LOG =  LoggerFactory . getLogger  (  MasterServer . class ) ;   public static final String  GOLDSRC_MASTER_SERVER = "hl1master.steampowered.com:27011" ;   public static final String  SOURCE_MASTER_SERVER = "hl2master.steampowered.com:27011" ;   public static final  byte  REGION_US_EAST_COAST = 0x00 ;   public static final  byte  REGION_US_WEST_COAST = 0x01 ;   public static final  byte  REGION_SOUTH_AMERICA = 0x02 ;   public static final  byte  REGION_EUROPE = 0x03 ;   public static final  byte  REGION_ASIA = 0x04 ;   public static final  byte  REGION_AUSTRALIA = 0x05 ;   public static final  byte  REGION_MIDDLE_EAST = 0x06 ;   public static final  byte  REGION_AFRICA = 0x07 ;   public static final  byte  REGION_ALL =  (  byte ) 0xFF ;   public static  int  retries = 3 ;   protected MasterServerSocket  socket ;   public static void setRetries  (   int newRetries )  {   retries = newRetries ; }   public MasterServer  (  String address )  throws SteamCondenserException  {  super  ( address , null ) ; }   public MasterServer  (  String address ,  Integer port )  throws SteamCondenserException  {  super  ( address , port ) ; }   public MasterServer  (  InetAddress address )  throws SteamCondenserException  {  super  ( address , null ) ; }   public MasterServer  (  InetAddress address ,  Integer port )  throws SteamCondenserException  {  super  ( address , port ) ; }   public  Vector  < InetSocketAddress > getServers  ( )  throws SteamCondenserException , TimeoutException  {  return  this . getServers  (  MasterServer . REGION_ALL , "" , false ) ; }   public  Vector  < InetSocketAddress > getServers  (   byte regionCode ,  String filter )  throws SteamCondenserException , TimeoutException  {  return  this . getServers  ( regionCode , filter , false ) ; }   public  Vector  < InetSocketAddress > getServers  (   byte regionCode ,  String filter ,  boolean force )  throws SteamCondenserException , TimeoutException  {   int  failCount = 0 ;  boolean  finished = false ;   int  portNumber = 0 ;  String  hostName = "0.0.0.0" ;   Vector  < String >  serverStringArray ;   Vector  < InetSocketAddress >  serverArray =  new  Vector  < InetSocketAddress >  ( ) ;  while  ( true )  {  try  {   failCount = 0 ;  do  {    this . socket . send  (  new A2M_GET_SERVERS_BATCH2_Paket  ( regionCode ,   hostName + ":" + portNumber , filter ) ) ;  try  {   serverStringArray =   (  ( M2A_SERVER_BATCH_Paket )   this . socket . getReply  ( ) ) . getServers  ( ) ;  for ( String serverString : serverStringArray )  {   hostName =  serverString . substring  ( 0 ,  serverString . lastIndexOf  ( ":" ) ) ;   portNumber =  Integer . valueOf  (  serverString . substring  (   serverString . lastIndexOf  ( ":" ) + 1 ) ) ;  if  (   !  hostName . equals  ( "0.0.0.0" ) &&  portNumber != 0 )  {   serverArray . add  (  new InetSocketAddress  ( hostName , portNumber ) ) ; } else  {   finished = true ; } }   failCount = 0 ; }  catch (   TimeoutException e )  {   failCount ++ ;  if  (  failCount == retries )  {  throw e ; }   LOG . info  (   "Request to master server " +  this . ipAddress + " timed out, retrying..." ) ; } } while  (  ! finished ) ;  break ; }  catch (   TimeoutException e )  {  if  ( force )  {  break ; } else  if  (  this . rotateIp  ( ) )  {  throw e ; }   LOG . info  (   "Request to master server failed, retrying " +  this . ipAddress + "..." ) ; } }  return serverArray ; }   public void initSocket  ( )  throws SteamCondenserException  {    this . socket =  new MasterServerSocket  (  this . ipAddress ,  this . port ) ; } }