  package    com . technophobia . substeps . model ;   import   java . util . ArrayList ;  import   java . util . HashMap ;  import   java . util . List ;  import   java . util . Map ;  import    org . junit . runner . Description ;   public class Scenario  extends RootFeature  {    @ Override public String toString  ( )  {  return  "Scenario: " + description ; }   private String  description ;   private  List  < Step >  steps ;   private  List  < ExampleParameter >  exampleParameters = null ;   private  String  [ ]  paramNames = null ;   private boolean  outline ;   private  int  scenarioLineNumber ;   private  int  exampleKeysLineNumber ;   private Description  junitDescription ;   private  int  sourceStartOffset =  - 1 ;   private  int  sourceStartLineNumber =  - 1 ;   private  int  sourceEndOffset =  - 1 ;   public boolean hasBackground  ( )  {  return  background != null ; }   public Description getJunitDescription  ( )  {  return junitDescription ; }   public void setJunitDescription  (   final Description junitDescription )  {    this . junitDescription = junitDescription ; }   public String getDescription  ( )  {  return description ; }   public void setDescription  (   final String description )  {    this . description = description ; }   public  List  < Step > getSteps  ( )  {  return steps ; }   public  List  < ExampleParameter > getExampleParameters  ( )  {  return exampleParameters ; }   public void setOutline  (   final boolean outline )  {    this . outline = outline ; }   public  int getScenarioLineNumber  ( )  {  return scenarioLineNumber ; }   public  int getExampleKeysLineNumber  ( )  {  return exampleKeysLineNumber ; }   public void setScenarioLineNumber  (   final  int scenarioLineNumber )  {    this . scenarioLineNumber = scenarioLineNumber ; }   public void setExampleKeysLineNumber  (   final  int exampleKeysLineNumber )  {    this . exampleKeysLineNumber = exampleKeysLineNumber ; }   public void addStep  (   final Step cukeArg )  {  if  (  cukeArg != null )  {  if  (  steps == null )  {   steps =  new  ArrayList  < Step >  ( ) ; }   steps . add  ( cukeArg ) ; } }   public void addExampleKeys  (   final  String  [ ] split )  {   paramNames = split ;   exampleParameters =  new  ArrayList  < ExampleParameter >  ( ) ; }   public void addExampleValues  (   final  int lineNumber ,   final  String  [ ] split )  {   final  Map  < String , String >  row =  new  HashMap  < String , String >  ( ) ;  for (   int  i = 1 ;  i <  split . length ;  i ++ )  {   row . put  (   paramNames [ i ] . trim  ( ) ,   split [ i ] . trim  ( ) ) ; }   exampleParameters . add  (  new ExampleParameter  ( lineNumber , row ) ) ; }   public boolean isOutline  ( )  {  return outline ; }   public  int getSourceStartOffset  ( )  {  return sourceStartOffset ; }   public void setSourceStartOffset  (   final  int sourceStartOffset )  {    this . sourceStartOffset = sourceStartOffset ; }   public  int getSourceStartLineNumber  ( )  {  return sourceStartLineNumber ; }   public void setSourceStartLineNumber  (   final  int sourceStartLineNumber )  {    this . sourceStartLineNumber = sourceStartLineNumber ; }   public void setSourceEndOffset  (   final  int end )  {    this . sourceEndOffset = end ; }   public  int getSourceEndOffset  ( )  {  return sourceEndOffset ; }   private Background  background = null ;   public Background getBackground  ( )  {  return background ; }   public void setBackground  (   final Background background )  {    this . background = background ; } }