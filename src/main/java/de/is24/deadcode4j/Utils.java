  package   de . is24 . deadcode4j ;   import     com . google . common . base . Function ;  import     org . apache . maven . project . MavenProject ;  import   javax . annotation . Nonnull ;  import   javax . annotation . Nullable ;  import   java . util . Map ;  import   java . util . Set ;  import static      com . google . common . collect . Sets . newHashSet ;  import     org . apache . maven . artifact . Artifact ;   public final class Utils  {   private Utils  ( )  {  super  ( ) ; }    @ Nonnull public static String getKeyFor  (    @ Nonnull MavenProject project )  {  return    project . getGroupId  ( ) + ":" +  project . getArtifactId  ( ) ; }    @ Nonnull public static  Function  < MavenProject , String > toKey  ( )  {  return  new  Function  < MavenProject , String >  ( )  {    @ Override public String apply  (    @ Nullable MavenProject input )  {  return   input == null ? null :  getKeyFor  ( input ) ; } } ; }   public static  <  K ,  V > V getValueOrDefault  (   Map  < K , V > map ,  K key ,  V defaultValue )  {  V  value =  map . get  ( key ) ;  return   value != null ? value : defaultValue ; }   public static  <  K ,  V >  Set  < V > getOrAddMappedSet  (   Map  < K ,  Set  < V > > map ,  K key )  {   Set  < V >  values =  map . get  ( key ) ;  if  (  values == null )  {   values =  newHashSet  ( ) ;   map . put  ( key , values ) ; }  return values ; }    @ Nonnull public static String getKeyFor  (    @ Nonnull Artifact artifact )  {  return      artifact . getGroupId  ( ) + ":" +  artifact . getArtifactId  ( ) + ":" +  artifact . getVersion  ( ) ; } }