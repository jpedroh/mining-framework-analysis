  package    de . slackspace . openkeepass . domain ;   import      de . slackspace . openkeepass . domain . zipper . GroupZipper ;   public class KeePassFileBuilder  implements  KeePassFileContract  {  Meta  meta ;  Group  root ;   private GroupBuilder  rootBuilder =  new GroupBuilder  ( ) ;   private GroupBuilder  topGroupBuilder =  new GroupBuilder  ( ) ;   public KeePassFileBuilder  (  KeePassFile keePassFile )  {    this . meta =  keePassFile . getMeta  ( ) ;   rootBuilder =  new GroupBuilder  (  keePassFile . getRoot  ( ) ) ; }   public KeePassFileBuilder  (  String databaseName )  {   meta =    new MetaBuilder  ( databaseName ) . historyMaxItems  ( 10 ) . build  ( ) ; }   public KeePassFileBuilder  (  Meta meta )  {    this . meta = meta ; }   public KeePassFileBuilder withMeta  (  Meta meta )  {    this . meta = meta ;  return this ; }   public KeePassFileBuilder addTopGroups  (  Group ...  groups )  {  for ( Group group : groups )  {   rootBuilder . addGroup  ( group ) ; }  return this ; }   public KeePassFileBuilder addTopEntries  (  Entry ...  entries )  {  for ( Entry entry : entries )  {   topGroupBuilder . addEntry  ( entry ) ; }  return this ; }   public KeePassFile build  ( )  {   setTopGroupNameIfNotExisting  ( ) ;   root =  rootBuilder . build  ( ) ;  return  new KeePassFile  ( this ) ; }   private void setTopGroupNameIfNotExisting  ( )  {  if  (   rootBuilder . getGroups  ( ) . isEmpty  ( ) )  {   rootBuilder . addGroup  (   topGroupBuilder . name  (  meta . getDatabaseName  ( ) ) . build  ( ) ) ; } }    @ Override public Meta getMeta  ( )  {  return meta ; }    @ Override public Group getRoot  ( )  {  return root ; } }