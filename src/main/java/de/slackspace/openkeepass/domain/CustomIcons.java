  package    de . slackspace . openkeepass . domain ;   import   java . util . ArrayList ;  import   java . util . List ;  import   java . util . UUID ;  import     javax . xml . bind . annotation . XmlAccessType ;  import     javax . xml . bind . annotation . XmlAccessorType ;  import     javax . xml . bind . annotation . XmlElement ;  import     javax . xml . bind . annotation . XmlRootElement ;    @ XmlRootElement  @ XmlAccessorType  (  XmlAccessType . FIELD ) public class CustomIcons  {    @ XmlElement  (  name = "Icon" ) private  List  < CustomIcon >  customIconList =  new  ArrayList  < CustomIcon >  ( ) ;  CustomIcons  ( )  { }   public  List  < CustomIcon > getIcons  ( )  {  return customIconList ; }   public CustomIcon getIconByUuid  (  UUID uuid )  {  for ( CustomIcon customIcon : customIconList )  {  if  (    customIcon . getUuid  ( ) != null &&    customIcon . getUuid  ( ) . compareTo  ( uuid ) == 0 )  {  return customIcon ; } }  return null ; }    @ Override public final  int hashCode  ( )  {   final  int  prime = 31 ;   int  result = 1 ;   result =   prime * result +  (   (  customIconList == null ) ? 0 :  customIconList . hashCode  ( ) ) ;  return result ; }    @ Override public final boolean equals  (  Object obj )  {  if  (  this == obj )  return true ;  if  (  obj == null )  return false ;  if  (  !  (  obj instanceof CustomIcons ) )  return false ;  CustomIcons  other =  ( CustomIcons ) obj ;  if  (  customIconList == null )  {  if  (   other . customIconList != null )  return false ; } else  if  (  !  customIconList . equals  (  other . customIconList ) )  return false ;  return true ; }   public CustomIcons  (  CustomIconsContract customIconsContract )  {    this . customIconList =  customIconsContract . getCustomIcons  ( ) ; } }