  package   hudson . tasks . junit ;   import  hudson . XmlFile ;  import   hudson . util . HeapSpaceStringConverter ;  import   hudson . util . XStream2 ;  import   java . io . File ;  import   java . io . IOException ;  import   java . net . URISyntaxException ;  import   java . util . Collection ;  import   java . util . List ;  import   org . junit . Test ;  import     org . jvnet . hudson . test . Bug ;  import    com . thoughtworks . xstream . XStream ;  import     org . jvnet . hudson . test . Issue ;  import static   org . junit . Assert .  * ;   public class TestResultTest  {   private File getDataFile  (  String name )  throws URISyntaxException  {  return  new File  (    TestResultTest . class . getResource  ( name ) . toURI  ( ) ) ; }    @ Test public void testIpsTests  ( )  throws Exception  {  TestResult  testResult =  new TestResult  ( ) ;   testResult . parse  (  getDataFile  ( "eclipse-plugin-test-report.xml" ) , null , null , null ) ;   Collection  < SuiteResult >  suites =  testResult . getSuites  ( ) ;   assertEquals  ( "Wrong number of test suites" , 16 ,  suites . size  ( ) ) ;   int  testCaseCount = 0 ;  for ( SuiteResult suite : suites )  {   testCaseCount +=   suite . getCases  ( ) . size  ( ) ; }   assertEquals  ( "Wrong number of test cases" , 3366 , testCaseCount ) ; }    @ Test public void testXmlCompatibility  ( )  throws Exception  {  XmlFile  xmlFile =  new XmlFile  ( XSTREAM ,  getDataFile  ( "junitResult.xml" ) ) ;  TestResult  result =  ( TestResult )  xmlFile . read  ( ) ;   result . tally  ( ) ;   assertEquals  ( 9 ,  result . getTotalCount  ( ) ) ;   assertEquals  ( 1 ,  result . getSkipCount  ( ) ) ;   assertEquals  ( 1 ,  result . getFailCount  ( ) ) ;   assertEquals  ( 0.576 ,  result . getDuration  ( ) , 0.0001 ) ;   Collection  < SuiteResult >  suites =  result . getSuites  ( ) ;   assertEquals  ( 6 ,  suites . size  ( ) ) ;   List  < CaseResult >  failedTests =  result . getFailedTests  ( ) ;   assertEquals  ( 1 ,  failedTests . size  ( ) ) ;  SuiteResult  failedSuite =  result . getSuite  ( "broken" ) ;   assertNotNull  ( failedSuite ) ;  CaseResult  failedCase =  failedSuite . getCase  ( "becomeUglier" ) ;   assertNotNull  ( failedCase ) ;   assertFalse  (  failedCase . isSkipped  ( ) ) ;   assertFalse  (  failedCase . isPassed  ( ) ) ;   assertEquals  ( 5 ,  failedCase . getFailedSince  ( ) ) ; }    @ Issue  ( "JENKINS-13214" )  @ Test public void testDuplicateTestMethods  ( )  throws IOException , URISyntaxException  {  TestResult  testResult =  new TestResult  ( ) ;   testResult . parse  (  getDataFile  ( "JENKINS-13214/27449.xml" ) , null , null , null ) ;   testResult . parse  (  getDataFile  ( "JENKINS-13214/27540.xml" ) , null , null , null ) ;   testResult . parse  (  getDataFile  ( "JENKINS-13214/29734.xml" ) , null , null , null ) ;   testResult . tally  ( ) ;   assertEquals  ( "Wrong number of test suites" , 1 ,   testResult . getSuites  ( ) . size  ( ) ) ;   assertEquals  ( "Wrong number of test cases" , 3 ,  testResult . getTotalCount  ( ) ) ; }    @ Bug  ( 12457 ) public void testTestSuiteDistributedOverMultipleFilesIsCountedAsOne  ( )  throws IOException , URISyntaxException  {  TestResult  testResult =  new TestResult  ( ) ;   testResult . parse  (  getDataFile  ( "JENKINS-12457/TestSuite_a1.xml" ) , null , null , null ) ;   testResult . parse  (  getDataFile  ( "JENKINS-12457/TestSuite_a2.xml" ) , null , null , null ) ;   testResult . tally  ( ) ;   assertEquals  ( "Wrong number of testsuites" , 1 ,   testResult . getSuites  ( ) . size  ( ) ) ;   assertEquals  ( "Wrong number of test cases" , 2 ,  testResult . getTotalCount  ( ) ) ;   assertEquals  ( "Wrong duration for test result" , 172.98 ,  testResult . getDuration  ( ) , 0.1 ) ; }   public void testDuplicatedTestSuiteIsNotCounted  ( )  throws IOException , URISyntaxException  {  TestResult  testResult =  new TestResult  ( ) ;   testResult . parse  (  getDataFile  ( "JENKINS-12457/TestSuite_b.xml" ) , null , null , null ) ;   testResult . parse  (  getDataFile  ( "JENKINS-12457/TestSuite_b_duplicate.xml" ) , null , null , null ) ;   testResult . tally  ( ) ;   assertEquals  ( "Wrong number of testsuites" , 1 ,   testResult . getSuites  ( ) . size  ( ) ) ;   assertEquals  ( "Wrong number of test cases" , 1 ,  testResult . getTotalCount  ( ) ) ;   assertEquals  ( "Wrong duration for test result" , 1.0 ,  testResult . getDuration  ( ) , 0.01 ) ; }    @ Issue  ( "JENKINS-41134" )  @ Test public void testMerge  ( )  throws IOException , URISyntaxException  {  TestResult  first =  new TestResult  ( ) ;  TestResult  second =  new TestResult  ( ) ;   first . parse  (  getDataFile  ( "JENKINS-41134/TestSuite_first.xml" ) , null , null , null ) ;   second . parse  (  getDataFile  ( "JENKINS-41134/TestSuite_second.xml" ) , null , null , null ) ;   assertEquals  ( "Fail count should be 0" , 0 ,  first . getFailCount  ( ) ) ;   first . merge  ( second ) ;   assertEquals  ( "Fail count should now be 1" , 1 ,  first . getFailCount  ( ) ) ;   first =  new TestResult  ( ) ;   second =  new TestResult  ( ) ;   first . parse  (  getDataFile  ( "JENKINS-41134/TestSuite_first.xml" ) , null , null , null ) ;   second . parse  (  getDataFile  ( "JENKINS-41134/TestSuite_second_dup_first.xml" ) , null , null , null ) ;   assertEquals  ( "Fail count should be 0" , 0 ,  first . getFailCount  ( ) ) ;   first . merge  ( second ) ;   assertEquals  ( "Fail count should now be 1" , 1 ,  first . getFailCount  ( ) ) ; }   private static final XStream  XSTREAM =  new XStream2  ( ) ;  static  {   XSTREAM . alias  ( "result" ,  TestResult . class ) ;   XSTREAM . alias  ( "suite" ,  SuiteResult . class ) ;   XSTREAM . alias  ( "case" ,  CaseResult . class ) ;   XSTREAM . registerConverter  (  new HeapSpaceStringConverter  ( ) , 100 ) ; }    @ Issue  ( "JENKINS-37598" )  @ Test public void testMergeWithTime  ( )  throws Exception  {  TestResult  testResult =  new TestResult  ( ) ;   testResult . parse  (  getDataFile  ( "junit-report-time-aggregation.xml" ) ) ;   testResult . tally  ( ) ;   assertEquals  ( 1 ,   testResult . getSuites  ( ) . size  ( ) ) ;  SuiteResult  suite =  testResult . getSuite  ( "test.fs.FileSystemTests" ) ;   assertEquals  ( 3 ,   suite . getCases  ( ) . size  ( ) ) ;   assertEquals  ( 100 ,  suite . getDuration  ( ) , 2 ) ; }    @ Issue  ( "JENKINS-37598" )  @ Test public void testMergeWithoutTime  ( )  throws Exception  {  TestResult  testResult =  new TestResult  ( ) ;   testResult . parse  (  getDataFile  ( "junit-report-time-aggregation2.xml" ) ) ;   testResult . tally  ( ) ;   assertEquals  ( 1 ,   testResult . getSuites  ( ) . size  ( ) ) ;  SuiteResult  suite =  testResult . getSuite  ( "test.fs.FileSystemTests" ) ;   assertEquals  ( 3 ,   suite . getCases  ( ) . size  ( ) ) ;   assertEquals  ( 30 ,  suite . getDuration  ( ) , 2 ) ; } }