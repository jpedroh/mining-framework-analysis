  package      de . uni_koblenz . jgralab . greql2 . evaluator . vertexeval ;   import   java . util . Set ;  import    de . uni_koblenz . jgralab . Edge ;  import    de . uni_koblenz . jgralab . EdgeDirection ;  import      de . uni_koblenz . jgralab . greql2 . evaluator . QueryImpl ;  import      de . uni_koblenz . jgralab . greql2 . schema . Direction ;  import      de . uni_koblenz . jgralab . greql2 . schema . PrimaryPathDescription ;  import      de . uni_koblenz . jgralab . greql2 . schema . GReQLDirection ;   public abstract class PrimaryPathDescriptionEvaluator  <  V  extends PrimaryPathDescription >  extends  PathDescriptionEvaluator  < V >  {   public PrimaryPathDescriptionEvaluator  (  V vertex ,  QueryImpl query )  {  super  ( vertex , query ) ; }   protected GReQLDirection getEdgeDirection  (  PrimaryPathDescription vertex )  {  if  (  validDirection == null )  {   validDirection =  GReQLDirection . INOUT ;  Edge  dirEdge =  vertex . getFirstIsDirectionOfIncidence  (  EdgeDirection . IN ) ;  if  (  dirEdge != null )  {  Direction  dirVertex =  ( Direction )  dirEdge . getAlpha  ( ) ;   validDirection =  dirVertex . get_dirValue  ( ) ; } else  if  (   dirVertex . get_dirValue  ( ) == "out" )  {   validDirection =   Transition . AllowedEdgeDirection . OUT ; } }  return validDirection ; }   protected  Set  < String > getEdgeRoles  (  EdgeRestrictionEvaluator edgeRestEval )  {  if  (  edgeRestEval == null )  {  return null ; }  return  edgeRestEval . getEdgeRoles  ( ) ; }   private GReQLDirection  validDirection = null ; }