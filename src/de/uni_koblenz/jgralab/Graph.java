  package   de . uni_koblenz . jgralab ;   import   java . util . Comparator ;  import   java . util . List ;  import     de . uni_koblenz . jgralab . eca . ECARuleManagerInterface ;  import     de . uni_koblenz . jgralab . schema . EdgeClass ;  import     de . uni_koblenz . jgralab . schema . VertexClass ;  import     de . uni_koblenz . jgralab . trans . CommitFailedException ;  import     de . uni_koblenz . jgralab . trans . InvalidSavepointException ;  import     de . uni_koblenz . jgralab . trans . Savepoint ;  import     de . uni_koblenz . jgralab . trans . Transaction ;   public interface Graph  extends  AttributedElement  {   public  <  T  extends Vertex > T createVertex  (   Class  < T > cls ) ;   public  <  T  extends Edge > T createEdge  (   Class  < T > cls ,  Vertex alpha ,  Vertex omega ) ;   public boolean isGraphModified  (   long previousVersion ) ;   public  long getGraphVersion  ( ) ;   public boolean containsVertex  (  Vertex v ) ;  boolean containsEdge  (  Edge e ) ;   public void deleteVertex  (  Vertex v ) ;   public void deleteEdge  (  Edge e ) ;   public Vertex getFirstVertex  ( ) ;   public Vertex getLastVertex  ( ) ;   public Vertex getFirstVertex  (  VertexClass vertexClass ) ;   public Vertex getFirstVertex  (   Class  <  ? extends Vertex > vertexClass ) ;   public Edge getFirstEdge  ( ) ;   public Edge getLastEdge  ( ) ;   public Edge getFirstEdge  (  EdgeClass edgeClass ) ;   public Edge getFirstEdge  (   Class  <  ? extends Edge > edgeClass ) ;   public Vertex getVertex  (   int id ) ;   public Edge getEdge  (   int id ) ;   public  int getVCount  ( ) ;   public  int getECount  ( ) ;   public String getId  ( ) ;   public  Iterable  < Edge > edges  ( ) ;   public  Iterable  < Edge > edges  (  EdgeClass edgeClass ) ;   public  Iterable  < Edge > edges  (   Class  <  ? extends Edge > edgeClass ) ;   public  <  T  extends Vertex >  List  < T > reachableVertices  (  Vertex startVertex ,  String pathDescription ,   Class  < T > vertexType ) ;   public  Iterable  < Vertex > vertices  ( ) ;   public  Iterable  < Vertex > vertices  (  VertexClass vertexclass ) ;   public  Iterable  < Vertex > vertices  (   Class  <  ? extends Vertex > vertexClass ) ;   public Transaction newTransaction  ( ) ;   public Transaction newReadOnlyTransaction  ( ) ;   public void setCurrentTransaction  (  Transaction transaction ) ;   public Transaction getCurrentTransaction  ( ) ;   public void commit  ( )  throws CommitFailedException ;   public void abort  ( ) ;   public Savepoint defineSavepoint  ( ) ;   public void restoreSavepoint  (  Savepoint savepoint )  throws InvalidSavepointException ;   public boolean hasTransactionSupport  ( ) ;   public void sortVertices  (   Comparator  < Vertex > comp ) ;   public void sortEdges  (   Comparator  < Edge > comp ) ;   public void addGraphStructureChangedListener  (  GraphStructureChangedListener newListener ) ;   public void removeGraphStructureChangedListener  (  GraphStructureChangedListener listener ) ;   public void removeAllGraphStructureChangedListeners  ( ) ;   public  int getGraphStructureChangedListenerCount  ( ) ;   public ECARuleManagerInterface getECARuleManager  ( ) ;   public ECARuleManagerInterface getECARuleManagerIfThere  ( ) ;   public TraversalContext setTraversalContext  (  TraversalContext tc ) ;   public TraversalContext getTraversalContext  ( ) ; }