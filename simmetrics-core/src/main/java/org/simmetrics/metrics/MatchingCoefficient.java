  package   org . simmetrics . metrics ;   import   java . util . List ;  import   org . simmetrics . ListMetric ;  import     com . google . common . collect . HashMultiset ;  import     com . google . common . collect . Multiset ;   public class MatchingCoefficient  <  T >  implements   ListMetric  < T >  {    @ Override public  float compare  (   List  < T > a ,   List  < T > b )  {  if  (   a . isEmpty  ( ) &&  b . isEmpty  ( ) )  {  return 1.0f ; }  if  (   a . isEmpty  ( ) ||  b . isEmpty  ( ) )  {  return 0.0f ; }   int  intersection = 0 ;   Multiset  < T >  bCopy =  HashMultiset . create  ( b ) ;  for ( T token : a )  {  if  (  bCopy . remove  ( token ) )  {   intersection ++ ; } }  return  intersection /  (  float )  (    a . size  ( ) +  b . size  ( ) - intersection ) ; }    @ Override public String toString  ( )  {  return "MatchingCoefficient" ; } }