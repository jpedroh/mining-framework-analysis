  package   org . simmetrics . metrics ;   import static      com . google . common . collect . Sets . intersection ;  import   java . util . Set ;  import   org . simmetrics . SetDistance ;  import   org . simmetrics . SetMetric ;   public final class Jaccard  <  T >  implements   SetMetric  < T > ,  SetDistance  < T >  {    @ Override public  float compare  (   Set  < T > a ,   Set  < T > b )  {  if  (   a . isEmpty  ( ) &&  b . isEmpty  ( ) )  {  return 1.0f ; }  if  (   a . isEmpty  ( ) ||  b . isEmpty  ( ) )  {  return 0.0f ; }  if  (   a . size  ( ) >  b . size  ( ) )  {   final  Set  < T >  swap = a ;   a = b ;   b = swap ; }   final  int  intersection =   intersection  ( a , b ) . size  ( ) ;  return  intersection /  (  float )  (    a . size  ( ) +  b . size  ( ) - intersection ) ; }    @ Override public  float distance  (   Set  < T > a ,   Set  < T > b )  {  return  1.0f -  compare  ( a , b ) ; }    @ Override public String toString  ( )  {  return "Jaccard" ; } }