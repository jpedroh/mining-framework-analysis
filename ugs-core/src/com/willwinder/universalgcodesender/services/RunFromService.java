  package    com . willwinder . universalgcodesender . services ;   import      com . willwinder . universalgcodesender . gcode . processors . RunFromProcessor ;  import     com . willwinder . universalgcodesender . listeners . UGSEventListener ;  import     com . willwinder . universalgcodesender . model . BackendAPI ;  import     com . willwinder . universalgcodesender . model . UGSEvent ;  import      com . willwinder . universalgcodesender . model . events . FileState ;  import      com . willwinder . universalgcodesender . model . events . FileStateEvent ;  import   java . util . HashSet ;  import   java . util . Set ;   public class RunFromService  implements  UGSEventListener  {   private final BackendAPI  backend ;   private RunFromProcessor  runFromProcessor =  new RunFromProcessor  ( 0 ) ;   public RunFromService  (  BackendAPI backend )  {    this . backend = backend ;  try  {    this . backend . applyCommandProcessor  ( runFromProcessor ) ; }  catch (   Exception e )  { }    this . backend . addUGSEventListener  ( this ) ; }   public void runFromLine  (   int lineNumber )  {  try  {    this . runFromProcessor . setLineNumber  ( lineNumber ) ;    this . backend . applyCommandProcessor  ( runFromProcessor ) ;   listeners . forEach  (  listener ->  listener . runFromLineChanged  ( lineNumber ) ) ; }  catch (   Exception e )  {   e . printStackTrace  ( ) ; } }    @ Override public void UGSEvent  (  UGSEvent evt )  {  if  (   evt instanceof FileStateEvent &&    (  ( FileStateEvent ) evt ) . getFileState  ( ) ==  FileState . OPENING_FILE )  {   runFromProcessor . setLineNumber  ( 0 ) ; } }   private final  Set  < RunFromServiceListener >  listeners =  new  HashSet  < >  ( ) ;   public void addListener  (  RunFromServiceListener runFromServiceListener )  {   listeners . add  ( runFromServiceListener ) ; }   public void removeListener  (  RunFromServiceListener runFromServiceListener )  {   listeners . removeIf  (  l ->  l == runFromServiceListener ) ; }   public interface RunFromServiceListener  {  void runFromLineChanged  (   int line ) ; } }