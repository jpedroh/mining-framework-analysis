  package        at . kc . tugraz . ss . service . disc . datatypes . pars ;   import      at . kc . tugraz . socialserver . utils . SSVarU ;  import        at . kc . tugraz . ss . datatypes . datatypes . entity . SSUri ;  import       at . kc . tugraz . ss . serv . datatypes . SSServPar ;  import        at . kc . tugraz . ss . serv . err . reg . SSServErrReg ;  import       at . kc . tugraz . ss . datatypes . datatypes . SSTextComment ;  import        at . kc . tugraz . ss . datatypes . datatypes . enums . SSEntityE ;  import        at . kc . tugraz . ss . datatypes . datatypes . label . SSLabel ;   public class SSDiscUserEntryAddPar  extends SSServPar  {   public Boolean  addNewDisc = null ;   public SSTextComment  explanation = null ;   public SSDiscUserEntryAddPar  (  SSServPar par )  throws Exception  {  super  ( par ) ;  try  {  if  (  pars != null )  {   disc =  ( SSUri )  pars . get  (  SSVarU . disc ) ;   entity =  ( SSUri )  pars . get  (  SSVarU . entity ) ;   entry =  ( SSTextComment )  pars . get  (  SSVarU . entry ) ;   addNewDisc =  ( Boolean )  pars . get  (  SSVarU . addNewDisc ) ;   type =  ( SSEntityE )  pars . get  (  SSVarU . type ) ;   label =  ( SSLabel )  pars . get  (  SSVarU . label ) ;   explanation =  ( SSTextComment )  pars . get  (  SSVarU . explanation ) ; }  if  (  clientPars != null )  {  try  {   entity =  SSUri . get  (  clientPars . get  (  SSVarU . entity ) ) ; }  catch (   Exception error )  { }  try  {   disc =  SSUri . get  (  clientPars . get  (  SSVarU . disc ) ) ; }  catch (   Exception error )  { }  try  {   addNewDisc =  Boolean . valueOf  (  clientPars . get  (  SSVarU . addNewDisc ) ) ; }  catch (   Exception error )  { }  try  {   entry =  SSTextComment . get  (  clientPars . get  (  SSVarU . entry ) ) ; }  catch (   Exception error )  { }  try  {   type =  SSEntityE . get  (  clientPars . get  (  SSVarU . type ) ) ; }  catch (   Exception error )  { }  try  {   label =  SSLabel . get  (  clientPars . get  (  SSVarU . label ) ) ; }  catch (   Exception error )  { }  try  {   explanation =  SSTextComment . get  (  clientPars . get  (  SSVarU . explanation ) ) ; }  catch (   Exception error )  { } } }  catch (   Exception error )  {   SSServErrReg . regErrThrow  ( error ) ; } }   public SSUri  disc = null ;   public SSUri  entity = null ;   public SSTextComment  entry = null ;   public SSEntityE  type = null ;   public SSLabel  label = null ; }