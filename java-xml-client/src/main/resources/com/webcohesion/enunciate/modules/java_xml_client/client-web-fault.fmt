[#ftl]
[#--

    Copyright Â© 2006-2016 Web Cohesion (info@webcohesion.com)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

--]
[#-- @ftlvariable name="fault" type="com.webcohesion.enunciate.modules.jaxws.model.WebFault" --]
[#-- @ftlvariable name="generatedCodeLicense" type="java.lang.String" --]
[#--template for the client-side web fault.--]
[@file name=(fault.simpleName + ".java")  package=packageFor(fault) charset="utf-8"]
/**
 * ${(generatedCodeLicense!"")?replace("\n", "\n * ")}
 *
 * Generated by <a href="http://enunciate.webcohesion.com">Enunciate</a>.
 */
package ${packageFor(fault)};

/**
 * ${(fault.docComment!"(no documentation provided)")?chop_linebreak?replace("\n", "\n * ")}
 */
@jakarta.xml.ws.WebFault (
  faultBean = "${fault.implicitFaultBeanQualifiedName!classnameFor(fault.explicitFaultBeanType)}"
)
public class ${fault.simpleName} extends Exception {
  [#if !fault.implicitSchemaElement]
    [#assign beanfqn=classnameFor(fault.explicitFaultBeanType)/]

  private ${beanfqn} faultInfo;

  public ${fault.simpleName}(String message, ${beanfqn} faultInfo) {
    super(message);
    this.faultInfo = faultInfo;
  }

  public ${fault.simpleName}(String message, ${beanfqn} faultInfo, Throwable cause) {
    super(message, cause);
    this.faultInfo = faultInfo;
  }

  /**
   * The fault info for this exception.
   */
  public ${beanfqn} getFaultInfo() {
    return this.faultInfo;
  }

  [#else]
    [#assign beanfqn=fault.implicitFaultBeanQualifiedName/]
    [#assign beanPackage=packageFor(beanfqn[0..(beanfqn?last_index_of(".") - 1)])/]
    [#assign simpleBeanName=beanfqn[(beanfqn?last_index_of(".") + 1)..]/]
    [#assign beanfqn=(beanPackage + "." + simpleBeanName)/]
  private ${beanfqn} faultInfo;

  public ${fault.simpleName}(String message, ${beanfqn} faultInfo) {
    super(message);
    init(faultInfo);
    [#list fault.childElements as childElement]
      [#-- @ftlvariable name="childElement" type="com.webcohesion.enunciate.modules.jaxws.model.WebFault.FaultBeanChildElement" --]
      [#if childElement.property.simpleName = "message"]
    if (message != null) {
      this.message = message;
    }
      [/#if]
    [/#list]
  }

  public ${fault.simpleName}(String message, ${beanfqn} faultInfo, Throwable cause) {
    super(message, cause);
    init(faultInfo);
    [#list fault.childElements as childElement]
      [#if childElement.property.simpleName = "message"]
    if (message != null) {
      this.message = message;
    }
      [/#if]
    [/#list]
  }

  protected void init(${beanfqn} faultInfo) {
    [#list fault.childElements as childElement]
      [#assign element=childElement.property/]
    set${element.simpleNameString?cap_first}(faultInfo.get${element.simpleNameString?cap_first}());
    [/#list]
  }

  /**
   * The fault info for this exception.
   */
  public ${beanfqn} getFaultInfo() {
    return this.faultInfo;
  }
    [#list fault.childElements as childElement]
      [#assign element=childElement.property/]

  private ${classnameFor(childElement)} ${element.simpleName};

  /**
   * ${(element.javaDoc.return!element.docValue!"(no documentation provided)")?chop_linebreak?replace("\n", "\n   * ")}
   */
  public ${classnameFor(childElement)} get${element.simpleNameString?cap_first}() {
    return this.${element.simpleName};
  }

  /**
   * ${(element.javaDoc.return!element.docValue!"(no documentation provided)")?chop_linebreak?replace("\n", "\n   * ")}
   */
  public void set${element.simpleNameString?cap_first}(${classnameFor(childElement)} ${element.simpleName}) {
    this.${element.simpleName} = ${element.simpleName};
  }
    [/#list]
  [/#if]

}
[/@file]