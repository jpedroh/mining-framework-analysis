  package     org . hdiv . web . servlet . support ;   import   java . util . HashMap ;  import   java . util . Map ;  import    javax . servlet . http . HttpServletRequest ;  import    org . hdiv . dataComposer . IDataComposer ;  import    org . hdiv . urlProcessor . FormUrlProcessor ;  import    org . hdiv . util . HDIVUtil ;  import      org . springframework . web . servlet . support . RequestDataValueProcessor ;   public class ThymeleafHdivRequestDataValueProcessor  extends HdivRequestDataValueProcessor  {    @ Override public String processAction  (   final HttpServletRequest request ,   final String action ,   final String method )  {  IDataComposer  dataComposer =  HDIVUtil . getDataComposer  ( request ) ;  if  (   dataComposer != null &&  dataComposer . isRequestStarted  ( ) )  {   dataComposer . endRequest  ( ) ; }  return  super . processAction  ( request , action , method ) ; }    @ Override public  Map  < String , String > getExtraHiddenFields  (   final HttpServletRequest request )  {  IDataComposer  dataComposer =  HDIVUtil . getDataComposer  ( request ) ;   Map  < String , String >  extraFields =  new  HashMap  < String , String >  ( ) ;  if  (   this . innerRequestDataValueProcessor != null )  {   Map  < String , String >  innerExtras =   this . innerRequestDataValueProcessor . getExtraHiddenFields  ( request ) ;  if  (  innerExtras != null )  {   extraFields . putAll  ( innerExtras ) ; } }  if  (   dataComposer == null ||   dataComposer . isRequestStarted  ( ) == false )  {  return extraFields ; }  String  formStateId =  ( String )  request . getAttribute  (  FormUrlProcessor . FORM_STATE_ID ) ;  if  (   formStateId != null &&   formStateId . length  ( ) > 0 )  {  String  hdivStateParam =  HDIVUtil . getHdivStateParameterName  ( request ) ;   extraFields . put  ( hdivStateParam , formStateId ) ; }  return extraFields ; } }