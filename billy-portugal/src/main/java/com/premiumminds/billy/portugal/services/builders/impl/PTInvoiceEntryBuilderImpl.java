  package       com . premiumminds . billy . portugal . services . builders . impl ;   import   javax . inject . Inject ;  import      com . premiumminds . billy . core . exceptions . BillyValidationException ;  import         com . premiumminds . billy . core . services . entities . documents . GenericInvoice . CreditOrDebit ;  import      com . premiumminds . billy . core . util . Localizer ;  import       com . premiumminds . billy . portugal . persistence . dao . DAOPTInvoice ;  import       com . premiumminds . billy . portugal . persistence . dao . DAOPTInvoiceEntry ;  import       com . premiumminds . billy . portugal . persistence . dao . DAOPTProduct ;  import       com . premiumminds . billy . portugal . persistence . dao . DAOPTRegionContext ;  import       com . premiumminds . billy . portugal . persistence . dao . DAOPTTax ;  import       com . premiumminds . billy . portugal . persistence . entities . PTInvoiceEntryEntity ;  import       com . premiumminds . billy . portugal . services . builders . PTInvoiceEntryBuilder ;  import       com . premiumminds . billy . portugal . services . entities . PTInvoiceEntry ;   public class PTInvoiceEntryBuilderImpl  <  TBuilder  extends  PTInvoiceEntryBuilderImpl  < TBuilder , TEntry > ,  TEntry  extends PTInvoiceEntry >  extends  PTGenericInvoiceEntryBuilderImpl  < TBuilder , TEntry , DAOPTInvoiceEntry , DAOPTInvoice >  implements   PTInvoiceEntryBuilder  < TBuilder , TEntry >  {   protected static final Localizer  LOCALIZER =  new Localizer  ( "com/premiumminds/billy/core/i18n/FieldNames" ) ;    @ Inject public PTInvoiceEntryBuilderImpl  (  DAOPTInvoiceEntry daoPTEntry ,  DAOPTInvoice daoPTInvoice ,  DAOPTTax daoPTTax ,  DAOPTProduct daoPTProduct ,  DAOPTRegionContext daoPTRegionContext )  {  super  ( daoPTEntry , daoPTInvoice , daoPTTax , daoPTProduct , daoPTRegionContext ) ; }    @ Override protected PTInvoiceEntryEntity getTypeInstance  ( )  {  return  ( PTInvoiceEntryEntity )  super . getTypeInstance  ( ) ; }    @ Override protected void validateInstance  ( )  throws BillyValidationException  {    this . getTypeInstance  ( ) . setCreditOrDebit  (  CreditOrDebit . CREDIT ) ;   super . validateInstance  ( ) ; } }